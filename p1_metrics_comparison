#%%
import numpy as np
import cobra
import pandas as pd
import seaborn as sns
from functions import *
import matplotlib.pyplot as plt
from skbio.stats.distance import mantel
from itertools import product


def comparison(dm_JD, dm_GK, dm_FLX, label, method='KernelPCA'):
     
    for m in [dm_JD, dm_GK, dm_FLX]:
        
        i = 0
        #heatmap
        h = sns.clustermap(m)
        plt.show()
   
        #PCA
        e = embed(m, method) 

        #scatterplot
        g = sns.scatterplot(e.iloc[:,0],e.iloc[:,1],hue=label,legend = 'brief',palette='colorblind',s=70)
        box = g.get_position() # get position of figure
        g.set_position([box.x0, box.y0, box.width * 1.25, box.height * 1.25]) # resize position    
        plt.legend(loc='center right', bbox_to_anchor=(1.47, 0.5), ncol=1)
        # Put a legend to the right side
        plt.legend(loc='upper left')
        plt.show(g)

        plt.show()

        i=+1

    values = []
    pval = []

    for pair in product([dm_JD, dm_GK, dm_FLX],repeat=2):
    
        sol = (mantel(pair[0],pair[1],'pearson'))
        values.append(np.round(sol[0], 3))
        pval.append(sol[1])

    rez = pd.DataFrame(np.array(values).reshape((3,3)),
                   index = ['Jaccard','GraphKernel','fluxCorr'],
                   columns = ['Jaccard','GraphKernel','fluxCorr']) 

    return rez

#%%
##########################################################################################
# paper part 1:  compare the three metrics
# heatmaps 
# PCA plots 
# mantels test 

######## PDGSM

path_lib = '/home/acabbia/Documents/Muscle_Model/models/merged_100_2class/'
path_ref = '/home/acabbia/Documents/Muscle_Model/models/HMRdatabase.xml'
label = [filename.split('_')[0].replace('L','Liver').replace('S','Skin') for filename in sorted(os.listdir(path_lib))]

# load library  
ref_model = cobra.io.read_sbml_model(path_ref)
rxn, met, gen, graphlist, flx = load_library(path_lib, ref_model, sampling = False, FBA=False)
flx = pd.read_csv('flx_mat_PDGSM.csv', index_col='Unnamed: 0')

rez = comparison(rxn,graphlist,flx, label)
rez

#%%
########### AGORA

dm_JD = pd.read_csv('/home/acabbia/Documents/Muscle_Model/tissueModels-distance/Agora_dm_jd.csv', index_col = 'Unnamed: 0')
dm_GK = pd.read_csv('/home/acabbia/Documents/Muscle_Model/tissueModels-distance/Agora_dm_gk.csv', index_col = 'Unnamed: 0')
dm_FLX = pd.read_csv('/home/acabbia/Documents/Muscle_Model/tissueModels-distance/Agora_dm_flx.csv', index_col = 'Unnamed: 0')

# get AGORA label ('Family')
tax_file = '/home/acabbia/Documents/Muscle_Model/GSMM-distance/agora_taxonomy.tsv'
taxonomy = pd.read_csv(tax_file,sep = '\t')
label = taxonomy['mclass']
label.name = 'Taxonomic class'

#reduce number of classes (classes with less than 10 elements are merged into "Other" class)
for s in list(label.value_counts()[label.value_counts()<10].index):
    label.replace(s,'Other', inplace=True)

rez = comparison(dm_JD, dm_GK, dm_FLX, label)

# %%
#subsample AGORA dataset (keep only models of 2 most represented classes , clostridia and bacilli )

bacilli = taxonomy['organism'][taxonomy['mclass']=='Bacilli']
lab_b = pd.Series(index=bacilli.values, data = [ "Bacilli" for i in range(len(bacilli))]) 

clostridia = taxonomy['organism'][taxonomy['mclass']=='Clostridia']
lab_c = pd.Series(index=clostridia.values, data = [ "Clostridia" for i in range(len(clostridia))])

to_keep = bacilli.append(clostridia)
label_s = lab_b.append(lab_c)

dm_JD_s = dm_JD.iloc[to_keep.index,to_keep.index]
dm_GK_s = dm_GK.iloc[to_keep.index,to_keep.index]
dm_FLX_s = dm_FLX.iloc[to_keep.index,to_keep.index]

rez = comparison(dm_JD_s, dm_GK_s, dm_FLX_s, label_s.values)

# %%
